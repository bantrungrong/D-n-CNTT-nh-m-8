-- Tạo cơ sở dữ liệu cho công ty sản xuất đồ uống X
CREATE DATABASE IF NOT EXISTS drink_company;

-- Sử dụng cơ sở dữ liệu vừa tạo
USE drink_company;

-- Tạo bảng quản lý danh mục sản phẩm
CREATE TABLE IF NOT EXISTS SanPham (
    MaSanPham VARCHAR(10) PRIMARY KEY,
    TenSanPham VARCHAR(100),
    LoaiSanPham VARCHAR(50),
    SoLuongTon INT  CHECK (SoLuongTon >= 0),
    DonGia DECIMAL(10, 2) CHECK (DonGia >= 0)
);

-- Tạo bảng quản lý thông tin đại lý
CREATE TABLE IF NOT EXISTS DaiLy (
    MaDaiLy VARCHAR(10) PRIMARY KEY,
    TenDaiLy VARCHAR(100),
    DiaChi VARCHAR(200),
    DienThoai VARCHAR(20),
    SoTienNo DECIMAL(10, 2) CHECK (SoTienNo >= 0)
);

-- Tạo bảng quản lý phiếu xuất hàng
CREATE TABLE IF NOT EXISTS PhieuXuatHang (
    MaPhieu INT AUTO_INCREMENT PRIMARY KEY,
    MaDaiLy VARCHAR(10),
    TenNguoiNhan VARCHAR(100),
    NgayXuat DATE,
    ChuKyViet VARCHAR(100),
    ChuKyNhan VARCHAR(100),
    ChuKyTruongDonVi VARCHAR(100),
    NgayCapMinistry DATE,
    SoGiayChungNhan VARCHAR(20),
    FOREIGN KEY (MaDaiLy) REFERENCES DaiLy(MaDaiLy)
);

-- Create the table if it doesn't exist
CREATE TABLE IF NOT EXISTS ChiTietPhieuXuatHang (
    MaPhieu INT,
    MaDaiLy VARCHAR(10),
    MaSanPham VARCHAR(10),
    SoLuongXuat INT CHECK (SoLuongXuat >= 0),
    DonGia DECIMAL(10, 2)  CHECK (DonGia >= 0),
    TongTien DECIMAL(10, 2) CHECK (TongTien >= 0),
    PRIMARY KEY (MaPhieu, MaSanPham),
    FOREIGN KEY (MaPhieu) REFERENCES PhieuXuatHang(MaPhieu),
    FOREIGN KEY (MaDaiLy) REFERENCES PhieuXuatHang(MaDaiLy),
    FOREIGN KEY (MaSanPham) REFERENCES SanPham(MaSanPham)
);


-- Tạo bảng quản lý phiếu nhập hàng
CREATE TABLE IF NOT EXISTS PhieuNhapHang (
    MaPhieuNhap INT,
    MaSanPham VARCHAR(10),
    SoHieuXuong VARCHAR(10),
    TenNguoiGiaoHang VARCHAR(100),
    TenSanPham VARCHAR(100),
    DonGia DECIMAL(10, 2) CHECK (DonGia >= 0),
    SoLuongNhap INT CHECK (SoLuongNhap >= 0),
    ThanhTien DECIMAL(10, 2) CHECK (ThanhTien >= 0),
    TongTien DECIMAL(10, 2) CHECK (TongTien >= 0),
    ChuKyViet VARCHAR(100),
    ChuKyNhan VARCHAR(100),
    ChuKyTruongDonVi VARCHAR(100),
    PRIMARY KEY (MaPhieuNhap, MaSanPham),
    FOREIGN KEY (MaSanPham) REFERENCES SanPham(MaSanPham)
);

-- Tạo bảng quản lý thông tin xưởng sản xuất
CREATE TABLE IF NOT EXISTS XuongSanXuat (
    MaPhanXuong VARCHAR(10) PRIMARY KEY,
    TenPhanXuong VARCHAR(100),
    DiaChi VARCHAR(200),
    MaSanPham VARCHAR(10) UNIQUE,
    FOREIGN KEY (MaSanPham) REFERENCES SanPham(MaSanPham)
);
CREATE TABLE IF NOT EXISTS ThongKeHangThang (
    Thang INT,
    Nam INT,
    SoLuongXuat INT,
    MaSanPham VARCHAR(10),
    DoanhThu DECIMAL(10, 2),
    PRIMARY KEY (Thang, Nam),
    FOREIGN KEY (MaSanPham) REFERENCES SanPham(MaSanPham)
);
-- Tạo bảng NguoiDung
CREATE TABLE IF NOT EXISTS NguoiDung (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    TenDangNhap VARCHAR(50) NOT NULL UNIQUE,
    MatKhau VARCHAR(100) NOT NULL,
    Congty VARCHAR(100),
    email VARCHAR(100) NOT NULL,
    ChucVu VARCHAR(50) NOT NULL DEFAULT 'user'
);


DELIMITER //

CREATE TRIGGER tr_after_insert_PhieuNhapHang
AFTER INSERT ON PhieuNhapHang
FOR EACH ROW
BEGIN
    DECLARE quantity INT;
    -- Lấy số lượng tồn của sản phẩm trước khi thêm phiếu nhập hàng
    SELECT SoLuongTon INTO quantity FROM SanPham WHERE MaSanPham = NEW.MaSanPham;
    -- Cập nhật số lượng tồn mới sau khi cộng thêm số lượng nhập hàng vào số lượng tồn hiện tại
    UPDATE SanPham SET SoLuongTon = quantity + NEW.SoLuongNhap WHERE MaSanPham = NEW.MaSanPham;
END;
//

DELIMITER ;


DELIMITER //

CREATE TRIGGER tr_after_insert_ChiTietPhieuXuatHang
AFTER INSERT ON ChiTietPhieuXuatHang
FOR EACH ROW
BEGIN
    DECLARE quantity INT;
    -- Lấy số lượng tồn của sản phẩm trước khi thêm phiếu xuất hàng
    SELECT SoLuongTon INTO quantity FROM SanPham WHERE MaSanPham = NEW.MaSanPham;
    -- Cập nhật số lượng tồn mới sau khi trừ đi số lượng xuất trong phiếu xuất hàng mới
    UPDATE SanPham SET SoLuongTon = quantity - NEW.SoLuongXuat WHERE MaSanPham = NEW.MaSanPham;
END;
//

DELIMITER ;

DELIMITER //

CREATE TRIGGER tr_after_insert_ThongKeHangThang
AFTER INSERT ON ChiTietPhieuXuatHang
FOR EACH ROW
BEGIN
    DECLARE currentMonth INT;
    DECLARE currentYear INT;
    DECLARE existingCount INT;

    -- Lấy tháng và năm hiện tại từ phiếu xuất hàng
    SELECT MONTH(px.NgayXuat), YEAR(px.NgayXuat)
    INTO currentMonth, currentYear
    FROM PhieuXuatHang px
    WHERE px.MaPhieu = NEW.MaPhieu;

    -- Kiểm tra xem đã có bản ghi cho tháng và năm này trong bảng ThongKeHangThang chưa
    SELECT COUNT(*) INTO existingCount
    FROM ThongKeHangThang
    WHERE Thang = currentMonth AND Nam = currentYear;

    IF existingCount > 0 THEN
        -- Cập nhật bảng ThongKeHangThang nếu đã có bản ghi cho tháng và năm này
        UPDATE ThongKeHangThang
        SET SoLuongXuat = SoLuongXuat + NEW.SoLuongXuat,
            DoanhThu = DoanhThu + (NEW.SoLuongXuat * NEW.DonGia)
        WHERE Thang = currentMonth AND Nam = currentYear;
    ELSE
        -- Chèn bản ghi mới vào bảng ThongKeHangThang nếu chưa có bản ghi cho tháng và năm này
        INSERT INTO ThongKeHangThang (Thang, Nam, SoLuongXuat, DoanhThu)
        VALUES (currentMonth, currentYear, NEW.SoLuongXuat, NEW.SoLuongXuat * NEW.DonGia);
    END IF;
END;
//

DELIMITER ;




